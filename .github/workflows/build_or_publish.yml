name: Build or Publish

on: [ push, workflow_dispatch ]

jobs:
  natives:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: x86
            java_arch: x86
            msvc_arch: amd64_x86
          - os: windows-latest
            arch: x64
            java_arch: x64
            msvc_arch: amd64
          - os: windows-latest
            arch: arm64
            java_arch: x64
            msvc_arch: amd64_arm64
            extra_java: 17
            vendor: zulu
          - os: macos-latest
            arch: x64
            java_arch: x64
            extra_java: 8
            vendor: zulu
          - os: macos-latest
            arch: arm64
            java_arch: x64
            extra_java: 8
            vendor: zulu
          - os: ubuntu-20.04
            arch: i386
            java_arch: x64
            linux_arch: i386
            packages: gcc-multilib
            extra_java: 8
            vendor: zulu
          - os: ubuntu-20.04
            arch: amd64
            java_arch: x64
          - os: ubuntu-20.04
            arch: aarch64
            java_arch: x64
            linux_arch: arm64
            packages: gcc-aarch64-linux-gnu libc6-dev-arm64-cross g++-aarch64-linux-gnu
            ports: true
            extra_java: 8
            vendor: zulu
          - os: ubuntu-20.04
            arch: ppc64le
            java_arch: x64
            linux_arch: ppc64el
            packages: gcc-powerpc64le-linux-gnu libc6-dev-ppc64el-cross g++-powerpc64le-linux-gnu
            ports: true
            extra_java: 8
            vendor: temurin
          - os: ubuntu-22.04
            arch: riscv64
            java_arch: x64
            linux_arch: riscv64
            packages: gcc-riscv64-linux-gnu libc6-dev-riscv64-cross g++-riscv64-linux-gnu
            ports: true
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - if: (matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04') && matrix.ports
      run: |
        sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
        sudo grep "ubuntu.com/ubuntu" /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list
        sudo sed -i 's/amd64,i386/arm64,ppc64el,riscv64/' /etc/apt/sources.list.d/ports.list
        sudo sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
    - if: (matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04') && matrix.linux_arch
      run: |
        sudo dpkg --add-architecture ${{ matrix.linux_arch }} && sudo apt-get clean && sudo apt-get update
        sudo apt-get install ${{ matrix.packages }} libx11-dev:${{ matrix.linux_arch }} libxrandr-dev:${{ matrix.linux_arch }} libxext-dev:${{ matrix.linux_arch }} libxcursor-dev:${{ matrix.linux_arch }} libxxf86vm-dev:${{ matrix.linux_arch }}
    - if: matrix.arch == 'riscv64'
      run: sudo apt-get install openjdk-11-jdk:${{ matrix.linux_arch }}
    - if: matrix.extra_java
      name: Set up ${{ matrix.arch }} zulu JDK ${{ matrix.extra_java }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.extra_java }}
        distribution: ${{ matrix.vendor }}
        architecture: ${{ matrix.arch }}
    - name: Set up ${{ matrix.java_arch }} zulu JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: zulu
        architecture: ${{ matrix.java_arch }}
    - if: (matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04') && matrix.arch == 'amd64'
      run: sudo apt install libx11-dev libxrandr-dev libxext-dev libxcursor-dev libxxf86vm-dev
    - if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
      with:
          arch: ${{ matrix.msvc_arch }}
    - name: Build natives
      run: ./gradlew compile_native --stacktrace
      env:
        ARCHITECTURE: ${{ matrix.arch }}
        TARGET_JAVA: /usr/lib/jvm/java-11-openjdk-${{ matrix.arch }}
    - uses: actions/upload-artifact@v3
      with:
        name: natives
        path: |
          lwjgl-platform/build/natives/lwjgl*.dll
          lwjgl-platform/build/natives/liblwjgl*.so
          lwjgl-platform/build/natives/liblwjgl*.dylib

  build:
    runs-on: ubuntu-latest
    needs: [natives, natives-debian]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: zulu
      - uses: actions/download-artifact@v3
        with:
          name: natives
          path: lwjgl-platform/build/natives
      - name: Build
        run: ./gradlew publishToMavenLocal --stacktrace
      - uses: actions/upload-artifact@v3
        with:
          name: maven
          path: ~/.m2/repository
      - if: ${{ github.event_name == 'workflow_dispatch' }}
        name: Publish to Maven
        run: ./gradlew publish --stacktrace
        env:
          MAVEN_PUBLISH_CREDENTIALS: ${{ secrets.MAVEN_PUBLISH_CREDENTIALS }}
