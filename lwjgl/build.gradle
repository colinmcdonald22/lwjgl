plugins {
    id "java"
    id "maven-publish"
}

sourceSets {
    generated {
        java
    }

    main {
        compileClasspath += sourceSets.generated.compileClasspath
        runtimeClasspath += sourceSets.generated.runtimeClasspath
        java
    }
}

dependencies {
    implementation(files("../libs/AppleJavaExtensions.jar"))
    implementation(files("../libs/asm-debug-all.jar"))
    implementation(project(":lwjgl-common"))
    implementation("net.java.jinput:jinput:$rootProject.jinput_version")
}

compileJava {
    dependsOn ":lwjgl-templates:generateAll"
    options.getHeaderOutputDirectory().set(file("../lwjgl-platform/src/generated/c/"))

    source project(":lwjgl-common").sourceSets.main.java, sourceSets.main.java, sourceSets.generated.java
}

jar {
    manifest {
        attributes(
                "Sealed": true,
                "Implementation-Version": project.version
        )
    }

    doFirst {
        from(project(":lwjgl-common").tasks.compileJava.outputs)

        include "org/lwjgl/*"
        include "org/lwjgl/opengles/ContextAttribs*.*"
        include "org/lwjgl/opencl/**"
        include "org/lwjgl/opengl/**"
        include "org/lwjgl/input/**"
        include "org/lwjgl/openal/**"
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

sourcesJar {
    dependsOn ":lwjgl-templates:generateAll"

    doFirst {
        from(project(":lwjgl-common").tasks.compileJava.inputs.files)

        include "org/lwjgl/*"
        include "org/lwjgl/opengles/ContextAttribs*.*"
        include "org/lwjgl/opencl/**"
        include "org/lwjgl/opengl/**"
        include "org/lwjgl/input/**"
        include "org/lwjgl/openal/**"

//        include "**/*"

        exclude "**.jar"
    }
}

javadoc {
    dependsOn ":lwjgl-templates:generateAll"

    failOnError = false
    maxMemory = '2G'

    options {
        source = 8
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        memberLevel = JavadocMemberLevel.PACKAGE
        windowTitle("LWJGL API")
        header("<h1>Lightweight Java Game Toolkit</h1>")
    }

    doFirst {
        source(compileJava.inputs.files, project(":lwjgl-common").tasks.compileJava.inputs.files)

        include "org/lwjgl/*"
        include "org/lwjgl/opengles/ContextAttribs*.*"
        include "org/lwjgl/opencl/**"
        include "org/lwjgl/opengl/**"
        include "org/lwjgl/input/**"
        include "org/lwjgl/openal/**"

//        include "**/*"

        exclude "**.jar"

        classpath = sourceSets.main.compileClasspath
    }

    // 		<javadoc destdir="${lwjgl.dstMaven}/lwjgl-javadoc" classpath="${lwjgl.lib}/jinput.jar" author="true" version="true" use="true" source="1.8" windowtitle="LWJGL API" useexternalfile="true">
    //			<fileset refid="lwjgl-sources.manual.fileset"/>
    //			<fileset refid="lwjgl-sources.generated.fileset"/>
    //			<doctitle><![CDATA[<h1>Lightweight Java Game Toolkit</h1>]]></doctitle>
    //			<bottom><![CDATA[<i>Copyright &#169; 2002-2010 lwjgl.org. All Rights Reserved.</i>]]></bottom>
    //		</javadoc>
}

tasks.register("utilJar", Jar) {
    dependsOn ":lwjgl:classes"

    manifest {
        attributes(
                "Implementation-Version": project.version
        )
    }

    doFirst {
        from(compileJava.outputs)

        exclude "**.*"
        exclude "org/lwjgl/util/generator/**"
        exclude "org/lwjgl/util/applet/**"
        include "org/lwjgl/util/**"
    }

    archiveBaseName.set("lwjgl_util")
}

tasks.register("utilSourceJar", Jar) {
    doFirst {
        from(sourceSets.main.allJava.srcDirs)

        exclude "**.*"
        exclude "org/lwjgl/util/generator/**"
        exclude "org/lwjgl/util/applet/**"
        include "org/lwjgl/util/**"

        exclude "**.jar"
    }

    archiveBaseName.set("lwjgl_util")
    archiveClassifier.set("sources")
}

tasks.register("utilJavadoc", Javadoc) {
    dependsOn jar

    failOnError = false
    maxMemory = '2G'

    destinationDir = file("build/docs/javadoc_util")

    options {
        source = 8
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        memberLevel = JavadocMemberLevel.PACKAGE
        windowTitle("LWJGL UTIL API")
        header("<h1>Lightweight Java Game Toolkit</h1>")
    }

    source(compileJava.inputs.files)

    exclude "**.*"
    exclude "org/lwjgl/util/generator/**"
    exclude "org/lwjgl/util/applet/**"
    include "org/lwjgl/util/**"

    classpath = sourceSets.main.compileClasspath + jar.outputs.files

    // 		<javadoc destdir="${lwjgl.dstMaven}/lwjgl_util-javadoc" classpath="${lwjgl.lib}/jinput.jar:${lwjgl.lib}/lwjgl.jar" author="true" version="true" use="true" source="1.8" windowtitle="LWJGL UTIL API" useexternalfile="true">
    //			<fileset refid="lwjgl_util-sources.fileset"/>
    //			<doctitle><![CDATA[<h1>Lightweight Java Game Toolkit</h1>]]></doctitle>
    //			<bottom><![CDATA[<i>Copyright &#169; 2002-2010 lwjgl.org. All Rights Reserved.</i>]]></bottom>
    //		</javadoc>
}

tasks.register("utilJavadocJar", Jar) {
    dependsOn utilJavadoc

    doFirst {
        from utilJavadoc.destinationDir
    }

    archiveBaseName.set("lwjgl_util")
    archiveClassifier.set("javadoc")
}

tasks.register("utilAppletJar", Jar) {
    dependsOn ":lwjgl:classes"

    from("res") {
        include "applet*"
    }

    doFirst {
        from(compileJava.outputs)

        exclude "**.*"
        include "org/lwjgl/util/applet/**"
    }

    manifest {
        attributes(
                "Sealed": true,
                "Trusted-Library": true,
                "Permissions": "all-permissions",
                "Codebase": "*",
                "Caller-Allowable-Codebase": "*",
                "Application-Library-Allowable-Codebase": "*",
                "Implementation-Version": project.version
        )
    }

    archiveBaseName.set("lwjgl_util_applet")
}

tasks.register("utilAppletSourceJar", Jar) {
    doFirst {
        from(sourceSets.main.allJava.srcDirs)

        exclude "**.*"
        include "org/lwjgl/util/applet/**"

        exclude "**.jar"
    }

    archiveBaseName.set("lwjgl_util_applet")
    archiveClassifier.set("sources")
}

tasks.register("utilAppletJavadoc", Javadoc) {
    dependsOn jar

    failOnError = false
    maxMemory = '2G'

    destinationDir = file("build/docs/javadoc_util_applet")

    options {
        source = 8
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        memberLevel = JavadocMemberLevel.PACKAGE
        windowTitle("LWJGL UTIL API")
        header("<h1>Lightweight Java Game Toolkit</h1>")
    }

    source(compileJava.inputs.files)

    exclude "**.*"
    include "org/lwjgl/util/applet/**"

    classpath = sourceSets.main.compileClasspath + jar.outputs.files

    // 		<javadoc destdir="${lwjgl.dstMaven}/lwjgl_util_applet-javadoc" classpath="${lwjgl.lib}/jinput.jar:${lwjgl.lib}/lwjgl.jar" author="true" version="true" use="true" source="1.8" windowtitle="LWJGL UTIL API" useexternalfile="true">
    //			<fileset refid="lwjgl_util_applet-sources.fileset"/>
    //			<doctitle><![CDATA[<h1>Lightweight Java Game Toolkit</h1>]]></doctitle>
    //			<bottom><![CDATA[<i>Copyright &#169; 2002-2010 lwjgl.org. All Rights Reserved.</i>]]></bottom>
    //		</javadoc>
}

tasks.register("utilAppletJavadocJar", Jar) {
    dependsOn utilAppletJavadoc

    doFirst {
        from utilAppletJavadoc.destinationDir
    }

    archiveBaseName.set("lwjgl_util_applet")
    archiveClassifier.set("javadoc")
}

tasks.register("nativeTest", JavaExec) {
    dependsOn "testClasses"
    systemProperty("java.library.path", file("../lwjgl-platform/build/natives").toString())
    classpath = sourceSets.test.runtimeClasspath
    mainClass = "org.lwjgl.test.NativeTest"
}

assemble.dependsOn(":lwjgl:utilJar")
assemble.dependsOn(":lwjgl:utilSourceJar")
assemble.dependsOn(":lwjgl:utilJavadocJar")
assemble.dependsOn(":lwjgl:utilAppletJar")
assemble.dependsOn(":lwjgl:utilAppletSourceJar")
assemble.dependsOn(":lwjgl:utilAppletJavadocJar")

testClasses.dependsOn(":compile_native")

publishing {
    publications {
        lwjgl(MavenPublication) {
            artifactId "lwjgl"

            artifact(jar) {
                builtBy jar
            }
            artifact(sourcesJar) {
                builtBy sourcesJar
            }
            artifact(javadocJar) {
                builtBy javadocJar
            }

            pom {
                name = "Lighweight Java Game Library"
                description = "Lighweight Java Game Library"
                url = "http://lwjgl.org/"

                scm {
                    url = "http://java-game-lib.svn.sourceforge.net/viewvc/java-game-lib/trunk/"
                    connection = "https://java-game-lib.svn.sourceforge.net/svnroot/java-game-lib"
                }

                withXml {
                    asNode().appendNode("packaging", "jar")

                    def parenting = asNode().appendNode("parent")
                    parenting.appendNode("groupId", project.group)
                    parenting.appendNode("artifactId", "parent")
                    parenting.appendNode("version", project.version)

                    def deps = asNode().appendNode("dependencies")

                    for (final def os in ["windows", "linux", "osx"]) {
                        def dep = deps.appendNode("dependency")
                        dep.appendNode("groupId", '${project.groupId}')
                        dep.appendNode("artifactId", "lwjgl-platform")
                        dep.appendNode("version", '${project.version}')
                        dep.appendNode("classifier", "natives-$os")
                    }

                    def jinput = deps.appendNode("dependency")
                    jinput.appendNode("groupId", "net.java.jinput")
                    jinput.appendNode("artifactId", "jinput")
                    jinput.appendNode("version", rootProject.jinput_version)
                }
            }
        }
        lwjgl_util(MavenPublication) {
            artifactId "lwjgl_util"

            artifact(utilJar) {
                builtBy utilJar
            }
            artifact(utilSourceJar) {
                builtBy utilSourceJar
            }
            artifact(utilJavadocJar) {
                builtBy utilJavadocJar
            }

            pom {
                name = "Lighweight Java Game Library"
                description = "Lighweight Java Game Library"
                url = "http://lwjgl.org/"

                scm {
                    url = "http://java-game-lib.svn.sourceforge.net/viewvc/java-game-lib/trunk/"
                    connection = "https://java-game-lib.svn.sourceforge.net/svnroot/java-game-lib"
                }

                withXml {
                    asNode().appendNode("packaging", "jar")

                    def parenting = asNode().appendNode("parent")
                    parenting.appendNode("groupId", project.group)
                    parenting.appendNode("artifactId", "parent")
                    parenting.appendNode("version", project.version)

                    def deps = asNode().appendNode("dependencies")

                    def dep = deps.appendNode("dependency")
                    dep.appendNode("groupId", project.group)
                    dep.appendNode("artifactId", "lwjgl")
                    dep.appendNode("version", project.version)

                    def jinput = deps.appendNode("dependency")
                    jinput.appendNode("groupId", "net.java.jinput")
                    jinput.appendNode("artifactId", "jinput")
                    jinput.appendNode("version", rootProject.jinput_version)
                }
            }
        }
        lwjgl_util_applet(MavenPublication) {
            artifactId "lwjgl_util_applet"

            artifact(utilAppletJar) {
                builtBy utilAppletJar
            }
            artifact(utilAppletSourceJar) {
                builtBy utilAppletSourceJar
            }
            artifact(utilAppletJavadocJar) {
                builtBy utilAppletJavadocJar
            }

            pom {
                name = "Lighweight Java Game Library"
                description = "Lighweight Java Game Library"
                url = "http://lwjgl.org/"

                scm {
                    url = "http://java-game-lib.svn.sourceforge.net/viewvc/java-game-lib/trunk/"
                    connection = "https://java-game-lib.svn.sourceforge.net/svnroot/java-game-lib"
                }

                withXml {
                    asNode().appendNode("packaging", "jar")

                    def parenting = asNode().appendNode("parent")
                    parenting.appendNode("groupId", project.group)
                    parenting.appendNode("artifactId", "parent")
                    parenting.appendNode("version", project.version)
                }
            }
        }
    }
    setupRepositories(repositories)
}